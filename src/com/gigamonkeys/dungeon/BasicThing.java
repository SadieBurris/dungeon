package com.gigamonkeys.dungeon;

import java.util.*;
import java.util.stream.*;

/**
 * New Thing interface. When describing the effects of a player action, we first
 * get the description of the thing directly affected by the action (e.g. the
 * thing taken or attacked or whatever). Then we collect a stream of actions
 * generated by any other things in the room that care about the player's
 * action. When a thing is used as a weapon it generates an Attack which is self
 * describing.
 */
public interface BasicThing extends Location {
  /**
   * The thing's name. How it must be referred to in commands.
   */
  public String name();

  /**
   * Set the thing's location.
   */
  public void setLocation(Location location);

  /**
   * Get the thing's location.
   */
  public Optional<Location> location();

  /**
   * Clear the thing's location. (Such as when the thing is eaten or otherwise destroyed.)
   */
  public void clearLocation();

  // Description may change based on state of thing (e.g. hit points, things it has)
  public String describe();

  // Describe what happens when the player does this to thing.

  public String attacked(int damage);

  public String taken();

  public String dropped();

  public String eaten();

  public Attack attackWith(Thing target);

  public Stream<Action> onEnter(Player player, Room room);

  public Stream<Action> onAttack(Player player, Thing target);

  public Stream<Action> onDrop(Player player, Thing dropped);

  public Stream<Action> onEat(Player player, Thing eaten);

  public Stream<Action> onTake(Player player, Thing taken, Thing from);

  /**
   * Can the thing be taken by the player.
   */
  public boolean isPortable();

  /**
   * Can the thing be eaten by the player.
   */
  public boolean isEdible();

  /**
   * Is the thing a monster.
   */
  public boolean isMonster();
}
